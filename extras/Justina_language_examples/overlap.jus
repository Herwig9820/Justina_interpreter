/*------------------------------------------------------------------------------------------------------------------------
    Example JUSTINA language program for use with the Justina interpreter
	
 	The Justina interpreter library is licensed under the terms of the GNU General Public License v3.0 as published      
    by the Free Software Foundation (https://www.gnu.org/licenses).                                                      
    Refer to GitHub for more information and documentation: https://github.com/Herwig9820/Justina_interpreter            
                                                                                                                         
    This example Justina code is in the public domain                                                                            
                                                                                                                         
    2024, Herwig Taveirne                                                                                                
------------------------------------------------------------------------------------------------------------------------*/


program overlap; // this is a JUSTINA program

/*
	This example demonstrates how to keep track of the number of characters printed on one line, by using
	- the pos() function within a print command to get the column number where printing started
	- the 'charcter count' argument of the fmt() function, returning the length of the formatted string 
	  returnded by the fmt() function 
	  
	The two functions below produce the same result.  
	  
	Function call: overlap1()
	               overlap2()
*/
	
	
// This function prints 12 lines with each time 2 numbers of different length, separated by "---".
// if less than 15 characters are printed, remaining columns are filled with '+' characters.
// -----------------------------------------------------------------------------------------------

function overlap1();
	var i=0, count=0, atColumn=0;								// initialise as integers
	
	for i = 1, 12; 
		cout exp(i), "---", cInt(1.7 ** (10-i)), " ";			// 'pos' now contains the next print position 
		coutLine repeatChar( "+", max(1, 16 - pos()));    			// fill up first 15 columns with '+' characters  
	end;
end;


// Same output as function overlap1(), but this time using the fmt() function 
// --------------------------------------------------------------------------

function overlap2();
	var i=0, count=0;											// initialise as integers
	
	for i = 1, 12; 
		cout exp(i), "---";										// 'pos' now contains the next print position  
		coutLine fmt(1.7 ** (10-i), 0, 1, DEC, 0, count), " ", 	// second number printed occupies 'count' characters: add these...
			repeatChar( "+", max(1, 15 - (pos() + count)));    	// ...to pos() before filling up first 15 columns with '+' characters			
	end;
end;
