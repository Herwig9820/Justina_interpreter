/*------------------------------------------------------------------------------------------------------------------------
    Example JUSTINA language program for use with the Justina interpreter
	
 	The Justina interpreter library is licensed under the terms of the GNU General Public License v3.0 as published      
    by the Free Software Foundation (https://www.gnu.org/licenses).                                                      
    Refer to GitHub for more information and documentation: https://github.com/Herwig9820/Justina_interpreter            
                                                                                                                         
    This example Justina code is in the public domain                                                                            
                                                                                                                         
    2024, Herwig Taveirne                                                                                                
------------------------------------------------------------------------------------------------------------------------*/


/*
	Example of a function that calls itself recursively.
	
	The function calculates the factorial of a number.
	Please note this is NOT an efficient way of calculating factorials, and
	its sole purpose is demonstrating recursion.
	This function expects a positive integer 'n' (no error checking is done).
	Keep n small (< 10): each recursive call consumes a small amount of memory.
	
	Function call: fact(numeric expression); 
	Returns: factorial of number
*/


program factorial; // this is a JUSTINA program

function fact(n); 
	var fact_n = 0;					// define and init a local variable

	if (n > 2); 
		fact_n =  n * fact(n-1); 	// recursive call: calculate n! as n * (n-1)!
	else;
		fact_n = n;						
	end;
	
	return fact_n; 					// return n!
end;